@Scripts.Render("~/bundles/jqueryui")
@Scripts.Render("~/bundles/index")

<div class="jumbotron">
    <input type="text" id="symbols" name="symbols" />
    <input type="button" id="searchBtn" title="Search" value="Search" />
    
</div>



<label id="quoteLbl"> </label>

<div id="QuoteDiv">
    
  
    Name:<label id="qName"></label><br>
    Symbol:<label id="qSymbol"></label><br>
    LastPrice:<label id="qLastPrice"></label><br>
    Change:<label id="qChange"></label><br>

    ChangePercent:<label title="ChangePercent:" id="qChangePercent"></label><br>
    TimeStamp:<label id="qTimeStamp"></label><br>
    MSDate:<label id="qMSDate"></label><br>


    MarketCap:<label id="qMarketCap"></label><br>
    Volume:<label id="qVolume"></label><br>
    ChangeYTD:<label id="qChangeYTD"></label><br>
    ChangePercentYTD:<label id="qChangePercentYTD"></label><br>
    High:<label id="qHigh"></label><br>
    Low:<label id="qLow"></label><br>
    Open:<label id="qOpen"></label><br>

</div>


@*@section Scripts {
    <script type="text/JavaScript">
        var availableTags = ["AAPL", "MSFT"];

        var Quote = function() {
            var self=this;
            self.Symbol = "AAPL";
            self.LastPrice = "100";
            self.SetData = function (data) {
                self.Symbol = data.Symbol;
                self.LastPrice = data.LastPrice;
            }
        }
        var UI = function () {
            var self = this;
            self.ShowQuote = function (data) {
                document.getElementById('qSymbol').innerHTML = data.Symbol;
                document.getElementById('qLastPrice').innerHTML = data.LastPrice;
            };
            self.RefreshAutocomplete = function()
            {
                var url = "/apinew/quotes/GetSymbols?filter=aadl";
                $.get(url, null, function (data) {
                    availableTags = [];
                    var arr_from_json = JSON.parse(data);
                    var arrayLength = arr_from_json.length;
                    for (var i = 0; i < arrayLength; i++) {
                        var tag = arr_from_json[i];
                        availableTags.push(tag.Symbol);
                    }
                    $("#symbols").autocomplete({ source: availableTags });
                });
            }
            self.GetQuote = function () {
                var smbl = document.getElementById('symbols').value;
                document.getElementById('quoteLbl').innerHTML = smbl;
                var urlgetQuotes = "/apinew/quotes/getQuote?symbol=" + smbl;

                $.get(urlgetQuotes, null, function (data) {
                    var qjson = JSON.parse(data);
                    currentQuote.SetData(qjson);
                    self.ShowQuote(currentQuote);

                });
            }
        }

        var currentQuote = new Quote();
        var cUI = new UI();
        cUI.ShowQuote(currentQuote);

        $(document).ready(function () {
            cUI.RefreshAutocomplete();
        });


        $('#searchBtn').click(function () {
            cUI.GetQuote();
        });


    </script>
}*@


